#
# Project NuriKit - Copyright 2023 SNU Compbio Lab.
# SPDX-License-Identifier: Apache-2.0
#

[build-system]
requires = ["scikit-build-core>=0.10"]
build-backend = "scikit_build_core.build"

[project]
name = "nurikit"
version = "@NURI_FULL_VERSION@"
description = "*The* fundamental software platform for chem- and bio-informatics"
readme = "README.md"
requires-python = ">=3.7"
license = { file = "LICENSE" }
authors = [{ name = "Nuri Jung", email = "jnooree@snu.ac.kr" }]
maintainers = [{ name = "Nuri Jung", email = "jnooree@snu.ac.kr" }]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: C++",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
    "Topic :: Scientific/Engineering :: Chemistry",
    "Operating System :: POSIX :: Linux",
    "Operating System :: MacOS :: MacOS X",
]
dependencies = ["numpy"]

[project.urls]
Documentation = "https://nurikit.readthedocs.io/"
Repository = "https://github.com/seoklab/nurikit.git"

[project.optional-dependencies]
test = ["pytest", "pytest-xdist"]
docs = [
    "sphinx<8.2",
    "sphinxcontrib-bibtex",
    "sphinx-rtd-theme",
    "urllib3<2.0",
    "setuptools",           # required for pkg_resources
]
coverage = ["gcovr"]

[tool.scikit-build]
minimum-version = "build-system.requires"
ninja.make-fallback = false

cmake.version = ">=@CMAKE_MINIMUM_REQUIRED_VERSION@"
cmake.build-type = "@CMAKE_BUILD_TYPE@"

sdist.include = ["/pyproject.toml", "*.pyi"]
sdist.exclude = [
    "/docs",
    "/fuzz",
    "/scripts",
    "/pyproject.toml.in",
    "cmake-variants.json",
    "gcovr.cfg",
    ".*",
]
wheel.packages = ["python/src/nuri"]
wheel.exclude = ["*.h", "*.cpp", "*.in"]
wheel.install-dir = "nuri"
install.strip = true

[tool.scikit-build.cmake.define]
NURI_BUILD_LIB = "@NURI_BUILD_LIB@"
NURI_BUILD_PYTHON = "ON"
NURI_ENABLE_SANITIZERS = "@NURI_ENABLE_SANITIZERS@"
NURI_TEST_COVERAGE = "@NURI_TEST_COVERAGE@"
NURI_BUILD_DOCS = "OFF"
NURI_BUILD_PYTHON_DOCS = "OFF"
NURI_REF = "@NURI_REF@"
NURI_OPTIMIZATION_LEVEL = "@NURI_OPTIMIZATION_LEVEL@"
NURI_ENABLE_IPO = "@NURI_ENABLE_IPO@"

[[tool.scikit-build.overrides]]
if.from-sdist = false
if.state = "(wheel|editable)"
if.scikit-build-version = ">=0.11"
build.requires = ["pybind11-stubgen", "numpy"]
cmake.define = { NURI_BUILD_PYTHON_STUBS = "ON" }

[tool.cibuildwheel]
build = ["cp*-manylinux_x86_64", "cp*-macosx_x86_64", "cp*-macosx_arm64"]
build-verbosity = 1

test-extras = ["test", "docs"]
test-command = [
    "pytest -v -s {project}/python/test",
    """
cmake -S {project} -B . \
    -DSKBUILD=ON \
    -DNURI_BUILD_LIB=OFF \
    -DNURI_BUILD_PYTHON=OFF \
    -DNURI_BUILD_PYTHON_DOCS=ON""",
    "cmake --build . --target NuriPythonDoctest -j",
]

[tool.cibuildwheel.config-settings]
"build.verbose" = "true"

[tool.cibuildwheel.linux]
environment-pass = ["SKBUILD_CMAKE_ARGS"]

[tool.cibuildwheel.macos]
before-all = ["brew install eigen boost ninja pybind11"]

[tool.cibuildwheel.macos.environment]
MACOSX_DEPLOYMENT_TARGET = "10.15"

[tool.pytest.ini_options]
testpaths = ["python/test"]

[tool.ruff]
line-length = 79

target-version = "py37"

src = ["python/src"]
extend-include = ["*.ipynb"]
extend-exclude = [".github/**", "*.pyc", "*.pyi"]

[tool.ruff.lint]
extend-select = [
    "W6",
    "I",
    "N80",
    "S102",
    "S108",
    "S306",
    "S307",
    "S60",
    "B",
    "A",
    "PT",
    "PTH",
    "PLE",
    "PLW",
    "NPY",
    "RUF",
]
ignore = [
    "E74",
    "F403",
    "F405",
    "N803",
    "N806",
    "S603",
    "S607",
    "B008",
    "B905",
    "PTH123",
    "PLW2901",
]

dummy-variable-rgx = "^_$"

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"conf.py*" = ["A001"]

[tool.ruff.lint.isort]
no-lines-before = ["local-folder"]

[tool.ruff.lint.flake8-pytest-style]
fixture-parentheses = true
mark-parentheses = true
