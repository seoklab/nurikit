#
# Project NuriKit - Copyright 2023 SNU Compbio Lab.
# SPDX-License-Identifier: Apache-2.0
#

name: Test and Report Coverage

on:
  workflow_call:
    secrets:
      CODECOV_TOKEN:
        required: true

defaults:
  run:
    shell: bash

jobs:
  coverage:
    if: ${{ !endsWith(github.triggering_actor, '[bot]') }}
    runs-on: ubuntu-latest
    steps:
      - run: sudo apt-get install -y libeigen3-dev

      - uses: lukka/get-cmake@latest
        with:
          cmakeVersion: "~3.16.0" # for Ubuntu 20.04

      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - uses: actions/setup-python@v5
        with:
          python-version: "3.8"

      - run: pip install sphinx

      - name: Configure
        run: |
          cmake -G Ninja -S . -B build \
            -DCMAKE_BUILD_TYPE=Debug \
            -DNURI_TEST_COVERAGE=ON \
            -DNURI_BUILD_PYTHON=ON

      - run: pip install -v '.[test,docs,coverage]'
        env:
          SKBUILD_BUILD_DIR: build

      - run: ./scripts/check_coverage.sh --json build

      - uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: build/coverage/json/coverage.json
          fail_ci_if_error: true
          verbose: true

  test-build:
    # runs-on: ubuntu-latest
    runs-on: [self-hosted, sandbox]

    env:
      CC: clang
      CXX: clang++
      CMAKE_BUILD_PARALLEL_LEVEL: "24"
      LD_PRELOAD: /usr/lib/x86_64-linux-gnu/libubsan.so.1
      UBSAN_OPTIONS: suppressions=${{ github.workspace }}/.github/ubsanignore.txt print_stacktrace=1

    steps:
      # - run: sudo apt-get install -y libeigen3-dev

      # - uses: lukka/get-cmake@latest
      #   with:
      #     cmakeVersion: "~3.18.0" # required for gtest DISCOVERY_MODE

      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - uses: actions/setup-python@v5
        with:
          python-version: "3.8"

      - run: pip install sphinx

      - name: Configure
        run: |
          cmake -G Ninja -S . -B build \
            -DCMAKE_BUILD_TYPE=RelWithDebInfo \
            -DCMAKE_CXX_FLAGS=-Werror \
            -DNURI_ENABLE_SANITIZERS=ON \
            -DNURI_BUILD_PYTHON=ON

      - name: Build
        run: |
          LD_LIBRARY_PATH="$(clang++ -print-resource-dir)/lib/linux:$LD_LIBRARY_PATH" pip install -v '.[test,docs]'
        env:
          SKBUILD_BUILD_DIR: build
          LD_PRELOAD: ""
          ASAN_OPTIONS: detect_leaks=0

      - name: C++ tests
        run: |
          LD_PRELOAD="$(clang++ -print-file-name=libclang_rt.asan-x86_64.so) $LD_PRELOAD"
          export LD_PRELOAD

          cd build
          ctest -j24 --output-on-failure

      - name: Python tests
        run: |
          LD_PRELOAD="$(clang++ -print-file-name=libclang_rt.asan-x86_64.so) $LD_PRELOAD"
          export LD_PRELOAD

          pytest -v -s
          cmake --build build --target nuri_python_docs_doctest
        env:
          ASAN_OPTIONS: detect_leaks=0
