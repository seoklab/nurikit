#
# Project NuriKit - Copyright 2023 SNU Compbio Lab.
# SPDX-License-Identifier: Apache-2.0
#

name: Publish to PyPI

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:
    inputs:
      version:
        description: "Version to emulate"
        type: string
        required: true
      minimal:
        description: "Minimal build"
        type: boolean
        required: false
        default: false

defaults:
  run:
    shell: bash

jobs:
  run-clang-tools:
    uses: ./.github/workflows/_run-clang-tools.yaml
    with:
      files-changed-only: false

  test:
    uses: ./.github/workflows/_test-and-coverage.yaml
    secrets:
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  build:
    uses: ./.github/workflows/wheels-matrix.yaml
    with:
      emulate-version: ${{ github.event.inputs.version }}
      minimal: ${{ github.event.inputs.minimal == 'true' }}

  publish:
    needs: [run-clang-tools, test, build]
    runs-on: ubuntu-latest

    environment:
      name: ${{ github.event_name == 'push' && 'release' || 'staging' }}
      url: ${{ github.event_name == 'push' && 'https://pypi.org' || 'https://test.pypi.org' }}/p/nurikit

    permissions:
      id-token: write
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - uses: actions/download-artifact@v6
        with:
          name: sdist
          path: dist
          merge-multiple: true

      - uses: actions/download-artifact@v6
        with:
          pattern: cibw-wheels-*
          path: dist
          merge-multiple: true

      - uses: pypa/gh-action-pypi-publish@release/v1
        with:
          verbose: true
          repository-url: ${{ github.event_name == 'push' && 'https://upload.pypi.org/legacy/' || 'https://test.pypi.org/legacy/' }}
          skip-existing: ${{ github.event_name == 'workflow_dispatch' }}

      # https://packaging.python.org/en/latest/specifications/version-specifiers/#public-version-identifiers
      # Check if the version ends with a/b/rc or .dev (could also include post release number)
      - id: prerelease-check
        run: |
          regex='((a|b|rc)([[:digit:]]+\.post)?|\.dev)[[:digit:]]+$'

          if grep -E "$regex" <<<"$GITHUB_REF"; then
            echo prerelease=true >> $GITHUB_OUTPUT
          else
            echo prerelease=false >> $GITHUB_OUTPUT
          fi
        env:
          GITHUB_REF: ${{ github.ref }}

      - uses: actions/download-artifact@v6
        with:
          pattern: libnuri-*
          path: dist
          merge-multiple: true

      - uses: softprops/action-gh-release@v2
        if: ${{ github.event_name == 'push' }}
        with:
          files: "dist/*"
          fail_on_unmatched_files: true
          generate_release_notes: true
          prerelease: ${{ steps.prerelease-check.outputs.prerelease == 'true' }}

concurrency:
  group: release-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.event_name == 'workflow_dispatch' }}
