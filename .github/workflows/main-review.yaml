#
# Project nurikit - Copyright 2023 SNU Compbio Lab.
# SPDX-License-Identifier: Apache-2.0
#

name: Test for PR and matching pushes

on:
  push:
    branches:
      - main
      - "release/**"
    paths:
      - ".github/workflows/main-review.yaml"
      - ".github/workflows/test-and-coverage.yaml"
      - "cmake/**"
      - "include/**"
      - "scripts/check_coverage.sh"
      - "src/**"
      - "test/**"
      - "third-party/**"
      - ".clang-*"
      - "CMakeLists.txt"
  pull_request:
    branches:
      - main
      - "release/**"
    paths:
      - ".github/workflows/main-review.yaml"
      - ".github/workflows/test-and-coverage.yaml"
      - "cmake/**"
      - "include/**"
      - "scripts/check_coverage.sh"
      - "src/**"
      - "test/**"
      - "third-party/**"
      - ".clang-*"
      - "CMakeLists.txt"
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review

defaults:
  run:
    shell: bash

jobs:
  run-clang-tools:
    runs-on: ubuntu-latest
    if: ${{ github.triggering_actor != 'dependabot[bot]' && (github.event_name == 'push' || !github.event.pull_request.draft) && !contains(github.event.head_commit.message, '[skip test]') }}

    steps:
      - uses: lukka/get-cmake@latest
        with:
          cmakeVersion: "~3.16.0" # for Ubuntu 20.04

      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Configure with cmake
        run: |
          cmake \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_EXPORT_COMPILE_COMMANDS=ON \
            -S . -B build

      - uses: cpp-linter/cpp-linter-action@v2
        id: clang-tools
        with:
          version: "15"
          extensions: "cpp,hpp,c,h"
          style: file
          tidy-checks: ""
          database: build
          ignore: ".github|build|third-party|test"
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Fail fast
        if: ${{ steps.clang-tools.outputs.checks-failed > 0 }}
        run: echo "Some files failed the linting checks!" && exit 1

  test-and-coverage:
    needs: [run-clang-tools]
    if: ${{ always() && !contains(needs.*.result, 'failure') && !contains(needs.*.result, 'cancelled') && !contains(github.event.head_commit.message, '[skip test]') }}
    uses: ./.github/workflows/test-and-coverage.yaml
    secrets:
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  test-build:
    needs: [run-clang-tools]
    if: ${{ always() && !contains(needs.*.result, 'failure') && !contains(needs.*.result, 'cancelled') && !contains(github.event.head_commit.message, '[skip test]') }}
    runs-on: ubuntu-latest
    steps:
      - uses: lukka/get-cmake@latest
        with:
          cmakeVersion: "~3.16.0" # for Ubuntu 20.04

      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Build and test
        run: |
          cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-Werror -S . -B build
          cmake --build build -j --target all test

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
