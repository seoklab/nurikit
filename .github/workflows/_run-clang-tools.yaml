#
# Project NuriKit - Copyright 2023 SNU Compbio Lab.
# SPDX-License-Identifier: Apache-2.0
#

name: Run clang tools

on:
  workflow_call:
    inputs:
      files-changed-only:
        type: boolean
        default: true
      version:
        type: string
        default: "20"

defaults:
  run:
    shell: bash

jobs:
  format-and-lint-changed:
    runs-on: ubuntu-latest
    if: ${{ inputs.files-changed-only }}

    steps:
      - uses: lukka/get-cmake@latest
        with:
          cmakeVersion: "~3.22.0" # for Ubuntu 22.04

      - uses: actions/setup-python@v5
        with:
          python-version: "3.8"

      - uses: actions/checkout@v5

      - run: .github/scripts/setup-deps.sh

      - name: Configure with cmake
        run: |
          cmake \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_EXPORT_COMPILE_COMMANDS=ON \
            -DBUILD_TESTING=OFF \
            -DNURI_PREBUILT_ABSL=ON \
            -S . -B build -G Ninja

      - uses: cpp-linter/cpp-linter-action@v2
        id: clang-tools
        with:
          version: ${{ inputs.version }}
          extensions: "cpp,hpp,c,h"
          style: file
          tidy-checks: ""
          database: build
          ignore: ".github|build|third-party|test|fuzz"
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Fail fast
        if: ${{  steps.clang-tools.outputs.checks-failed > 0 }}
        run: echo "Some files failed the linting checks!" && exit 1

  format-and-lint-all:
    # runs-on: ubuntu-latest
    runs-on: [self-hosted, sandbox]
    if: ${{ !inputs.files-changed-only }}

    steps:
      # - run: sudo apt-get install -y libeigen3-dev

      # - uses: lukka/get-cmake@latest
      #   with:
      #     cmakeVersion: "~3.22.0" # for Ubuntu 22.04

      - uses: actions/setup-python@v5
        with:
          python-version: "3.8"

      - uses: actions/checkout@v5

      - name: Configure with cmake
        run: |
          cmake \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_EXPORT_COMPILE_COMMANDS=ON \
            -DBUILD_TESTING=OFF \
            -DNURI_PREBUILT_ABSL=ON \
            -S . -B build -G Ninja

      - name: Run clang tools to all files
        run: |
          # wget https://apt.llvm.org/llvm.sh
          # chmod +x llvm.sh

          # VERS=${{ inputs.version }}
          # sudo ./llvm.sh $VERS
          # sudo apt-get install -y clang-tidy-$VERS clang-format-$VERS
          # sudo ln -sf clang-tidy-$VERS /usr/bin/clang-tidy
          # sudo ln -sf clang-format-$VERS /usr/bin/clang-format

          ./scripts/run_clang_tools.sh -c -j24
