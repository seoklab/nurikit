Checks: "-*,abseil-*,bugprone-*,clang-*,concurrency-*,cppcoreguidelines-*,google-*,misc-*,modernize-*,openmp-*,performance-*,portability-*,readability-*,-bugprone-easily-swappable-parameters,-cppcoreguidelines-avoid-do-while,-cppcoreguidelines-init-variables,-cppcoreguidelines-narrowing-conversions,-cppcoreguidelines-pro-*,-google-explicit-constructor,-misc-no-recursion,-modernize-avoid-c-arrays,-modernize-braced-init-list,-modernize-loop-convert,-modernize-concat-nested-namespaces,-modernize-pass-by-value,-modernize-raw-string-literal,-modernize-use-trailing-return-type,-modernize-use-auto,-modernize-use-default-member-init,-modernize-use-emplace,-modernize-use-nodiscard,-readability-isolate-declaration,-readability-identifier-length,-*-magic-numbers"
FormatStyle: "file"
CheckOptions:
  - key: bugprone-stringview-nullptr.IncludeStyle
    value: google
  - key: bugprone-implicit-widening-of-multiplication-result.IncludeStyle
    value: google
  - key: cppcoreguidelines-init-variables.IncludeStyle
    value: google
  - key: misc-uniqueptr-reset-release.IncludeStyle
    value: google
  - key: modernize-replace-auto-ptr.IncludeStyle
    value: google
  - key: modernize-loop-convert.IncludeStyle
    value: google
  - key: modernize-replace-random-shuffle.IncludeStyle
    value: google
  - key: modernize-pass-by-value.IncludeStyle
    value: google
  - key: modernize-make-shared.IncludeStyle
    value: google
  - key: modernize-make-unique.IncludeStyle
    value: google
  - key: performance-move-constructor-init.IncludeStyle
    value: google
  - key: performance-type-promotion-in-math-fn.IncludeStyle
    value: google
  - key: performance-unnecessary-value-param.IncludeStyle
    value: google
    # The following entries are (partailly) based on the Google C++ Style Guide.
    # Namely, we use lower_case for function names, for better interoperability
    # with the Python language.
    # Types (class, struct, typedefs, ...) are *not* included here as a "rule",
    # because they have much more exceptions than the others; however, most
    # types should use CamelCase for readability.
  - key: readability-function-cognitive-complexity.Threshold
    value: "30"
  - key: readability-identifier-naming.EnumConstantCase
    value: CamelCase
  - key: readability-identifier-naming.EnumConstantPrefix
    value: k
  - key: readability-identifier-naming.FunctionCase
    value: lower_case
  - key: readability-identifier-naming.GlobalConstantCase
    value: CamelCase
  - key: readability-identifier-naming.GlobalConstantPrefix
    value: k
  - key: readability-identifier-naming.MemberSuffix
    value: _
    # Due to (an issue of?) clang-tidy configuration engine, at least one
    # non-empty entry must be defined to remove the suffix of public members.
  - key: readability-identifier-naming.PublicMemberCase
    value: lower_case
  - key: readability-identifier-naming.PublicMemberSuffix
    value: ""
  - key: readability-identifier-naming.NamespaceCase
    value: lower_case
  - key: readability-identifier-naming.VariableCase
    value: lower_case
